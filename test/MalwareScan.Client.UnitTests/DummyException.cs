using System;
using System.Runtime.Serialization;

namespace MalwareScan.Client.UnitTests
{
	/// <summary>
	/// Represents a dummy exception for testing purposes.
	/// </summary>
	public class DummyException : Exception
	{
		/// <summary>
		/// Initializes a new instance of the <see cref="DummyException"/> class.
		/// </summary>
		public DummyException()
		{
		}

		/// <summary>
		/// Initializes a new instance of the <see cref="DummyException"/> class with a specified message.
		/// </summary>
		/// <param name="message">the message that describes the error</param>
		public DummyException(string message)
			: base(message)
		{
		}

		/// <summary>
		/// Initializes a new instance of the <see cref="DummyException"/> class with a specified message and a reference to
		/// the inner exception that is the cause of this exception.
		/// </summary>
		/// <param name="message">the message that describes the error</param>
		/// <param name="innerException">the exception that is the cause of the current exception, or a <value>null</value> reference if no
		/// inner exception is specified</param>
		public DummyException(string message, Exception innerException)
			: base(message, innerException)
		{
		}

		/// <summary>
		/// Initializes a new instance of the <see cref="DummyException"/> class with serialized data.
		/// </summary>
		/// <param name="info">the <see cref="SerializationInfo"/> that holds the serialized object data about the exception being thrown
		/// </param>
		/// <param name="context">the <see cref="StreamingContext"/> that contains contextual information about the source or destination
		/// </param>
		protected DummyException(SerializationInfo info, StreamingContext context)
			: base(info, context)
		{
		}
	}
}
