using CommandLine;

namespace MalwareScan.ClientApp
{
	/// <summary>
	/// Represents a base class for command-line options.
	/// </summary>
	internal abstract class OptionsBase
	{
		/// <summary>
		/// Gets or sets the flag indicating whether to provide a verbose output or not.
		/// </summary>
		[Option("verbose", Required = false, Default = false, HelpText = "Print messages to standard output")]
		public bool Verbose { get; set; }

		/// <summary>
		/// Gets or sets the output format.
		/// </summary>
		[Option("output-format", Required = false, Default = OutputFormat.Yaml, HelpText = "Output format")]
		public OutputFormat OutputFormat { get; set; }

		/// <summary>
		/// Gets or sets the service type.
		/// </summary>
		[Option("service-type", Required = false, Default = ServiceType.Compatible, HelpText = "Service type (supported values are 'MalwareScanV1_0' and 'MalwareScanV1_1')")]
		public ServiceType ServiceType { get; set; }

		/// <summary>
		/// Gets or sets the URL of the API.
		/// </summary>
		[Option("url", Required = true, HelpText = "URL of the API")]
		public string Url { get; set; }

		/// <summary>
		/// Gets or sets the flag indicating whether to check the server X.509 certificate or not.
		/// </summary>
		[Option("no-certificate-validation", Required = false, HelpText = "Disable server certificate validation")]
		public bool NoValidation { get; set; }

		/// <summary>
		/// Gets or sets the name of the store the X.509 client certificate is stored in.
		/// </summary>
		[Option("certificate-store", HelpText = "Name of the store the X.509 is stored in")]
		public string CertificateStoreName { get; set; }

		/// <summary>
		/// Gets or setes the thumbprint of the X.509 client certificate to find in the store (see <see cref="CertificateStoreName"/>).
		/// </summary>
		[Option("certificate-thumbprint", HelpText = "Thumbprint of the X.509 is find")]
		public string CertificateThumbprint { get; set; }

		/// <summary>
		/// Gets or sets the file name of the X.509 client certificate.
		/// </summary>
		[Option("certificate-file", HelpText = "File name of the X.509 client certificate")]
		public string CertificateFileName { get; set; }

		/// <summary>
		/// Gets or sets the password of the X.509 client certificate (see <see cref="CertificateFileName"/>).
		/// </summary>
		[Option("certificate-password", HelpText = "Password for the X.509 client certificate")]
		public string CertificatePassword { get; set; }

		/// <summary>
		/// Gets or sets the user name used for basic authentication to the API.
		/// </summary>
		[Option("username", Required = false, HelpText = "User name used for basic authentication to the API")]
		public string UserName { get; set; }

		/// <summary>
		/// Gets or sets the password used for basic authentication to the API.
		/// </summary>
		[Option("password", Required = false, HelpText = "Password used for basic authentication to the API")]
		public string Password { get; set; }
	}
}
