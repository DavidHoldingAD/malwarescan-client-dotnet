using System;
using System.Linq;

namespace MalwareScan.Client.ApiV1_1
{
	/// <summary>
	/// Contains methods for converting between Evaluation API v1.1 types to client types.
	/// </summary>
	internal class Conversion
	{
		public static Client.Evaluation ConvertEvaluation(Evaluation source)
		{
			var target = new Client.Evaluation
			{
				Id = source.Id,
				CorrelationId = source.CorrelationID,
				Date = source.Date,
				ElapsedTime = source.ElapsedTime,
				Status = ConvertEvaluationStatus(source.Status),
				StatusDate = source.StatusDate,
				IsMalicious = source.Malicious,
				Files = source.Files?.Select(ConvertEvaluationFile).ToArray(),
			};

			return target;
		}

		public static Client.EvaluationStatus ConvertEvaluationStatus(EvaluationStatus source)
		{
			switch (source)
			{
				case EvaluationStatus.InProgress:
					{
						return Client.EvaluationStatus.InProgress;
					}
				case EvaluationStatus.Complete:
					{
						return Client.EvaluationStatus.Complete;
					}
				case EvaluationStatus.Error:
					{
						return Client.EvaluationStatus.Error;
					}
				default:
					{
						throw new ArgumentException($"Invalid value `{source}` for evaluation status was provided.", nameof(source));
					}
			}
		}

		public static Client.EvaluationFile ConvertEvaluationFile(EvaluationFile source)
		{
			var target = new Client.EvaluationFile
			{
				FileName = source.FileName,
				Sha256 = source.Sha256,
				Status = ConvertEvaluationStatus(source.Status),
				StatusDate = source.StatusDate,
				IsMalicious = source.Malicious,
				Message = source.Message,
			};

			return target;
		}
	}
}
