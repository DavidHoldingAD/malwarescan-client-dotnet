using System;
using System.Runtime.Serialization;

namespace MalwareScan.Client
{
	/// <summary>
	/// Represents an error that occurred because an evaluation was not found.
	/// </summary>
	public class EvaluationNotFoundException : ObjectNotFoundException
	{
		/// <summary>
		/// Initializes a new instance of the <see cref="EvaluationNotFoundException"/> class.
		/// </summary>
		public EvaluationNotFoundException()
		{
		}

		/// <summary>
		/// Initializes a new instance of the <see cref="EvaluationNotFoundException"/> class with a specified error message.
		/// </summary>
		/// <param name="message">the message that describes the error</param>
		public EvaluationNotFoundException(string message)
			: base(message)
		{
		}

		/// <summary>
		/// Initializes a new instance of the <see cref="EvaluationNotFoundException"/> class with a specified error message and
		/// a reference to the inner exception that is the cause of this exception.
		/// </summary>
		/// <param name="message">the message that describes the error</param>
		/// <param name="innerException">the exception that is the cause of the current exception, or a null reference if no inner
		/// exception is specified</param>
		public EvaluationNotFoundException(string message, Exception innerException)
			: base(message, innerException)
		{
		}

		/// <summary>
		/// Initializes a new instance of the <see cref="EvaluationNotFoundException"/> class with serialized data.
		/// </summary>
		/// <param name="info">the <see cref="SerializationInfo"/> that holds the serialized object data about the exception being thrown
		/// </param>
		/// <param name="context">the <see cref="StreamingContext"/> that contains contextual information about the source or destination
		/// </param>
		protected EvaluationNotFoundException(SerializationInfo info, StreamingContext context)
			: base(info, context)
		{
		}
	}
}
