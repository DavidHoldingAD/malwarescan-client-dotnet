# Docker image from Docker Hub as your build environment.
image: microsoft/dotnet:2.1-sdk

pipelines:
  default:
    - step:
        caches:
          - dotnetcore
        script:
          - git config --global core.autocrlf true
          - export ARTIFACTS_PATH=./.artifacts
          - export CONFIGURATION=Debug
          - dotnet --version
          # Build MalwareScan.Client
          - >-
              dotnet publish ./src/MalwareScan.Client `
                --output "$ARTIFACTS_PATH/MalwareScan.Client/fdd" `
                --configuration "$CONFIGURATION"

          # Pack MalwareScan.Client
          - >-
              dotnet pack ./src/MalwareScan.Client `
                --output "$ARTIFACTS_PATH" `
                --configuration "$CONFIGURATION"

          # Build MalwareScan.ClientApp (framework-dependend deployment)
          - >-
              dotnet publish ./src/MalwareScan.ClientApp `
                --output "$ARTIFACTS_PATH/MalwareScan.ClientApp/fdd" `
                --configuration "$CONFIGURATION"

          # Build MalwareScan.ClientApp for win-x86
          - >-
              dotnet publish ./src/MalwareScan.ClientApp `
                --output "$ARTIFACTS_PATH/MalwareScan.ClientApp/win-x86" `
                --configuration "$CONFIGURATION" `
                --runtime "win-x86"

          # Build MalwareScan.ClientApp for win-x64
          - >-
              dotnet publish ./src/MalwareScan.ClientApp `
                --output "$ARTIFACTS_PATH/MalwareScan.ClientApp/win-x64" `
                --configuration "$CONFIGURATION" `
                --runtime "win-x64"

          # Build MalwareScan.ClientApp for linux-x64
          - >-
              dotnet publish ./src/MalwareScan.ClientApp `
                --output "$ARTIFACTS_PATH/MalwareScan.ClientApp/linux-x64" `
                --configuration "$CONFIGURATION" `
                --runtime "linux-x64"

          # MalwareScan.Client unit tests
          - >-
              dotnet test test/MalwareScan.Client.UnitTests `
                --configuration "$CONFIGURATION" `
                --collect "Code Coverage"

          # MalwareScan.ClientApp unit tests
          - >-
              dotnet test test/MalwareScan.ClientApp.UnitTests `
                --configuration "$CONFIGURATION" `
                --collect "Code Coverage"
