version: '{build}-{branch}'

image: Visual Studio 2017

configuration:
  - Release

init:
  # Good practice, because Windows line endings are different from Unix/Linux ones
  - ps: git config --global core.autocrlf true

install:
  - ps: choco install GitVersion.Portable --yes

before_build:
  # Get .NET Core version
  - ps: dotnet --version
  # Get version from GitVersion
  - ps: gitversion /l console /output buildserver
  # Update AppVeyor build version
  - ps: appveyor UpdateBuild -Version "$env:GitVersion_SemVer-$env:GitVersion_BuildMetaData"

build_script:
  # Build MalwareScan.Client
  - ps: >-
      dotnet publish ./src/MalwareScan.Client `
        --output "$env:APPVEYOR_BUILD_FOLDER/.artifacts/MalwareScan.Client/fdd" `
        --configuration "$env:CONFIGURATION"

  # Pack MalwareScan.Client
  - ps: >-
      dotnet pack ./src/MalwareScan.Client `
        --output "$env:APPVEYOR_BUILD_FOLDER/.artifacts" `
        --configuration "$env:CONFIGURATION"

  # Build MalwareScan.ClientApp (framework-dependend deployment)
  - ps: >-
      dotnet publish ./src/MalwareScan.ClientApp `
        --output "$env:APPVEYOR_BUILD_FOLDER/.artifacts/MalwareScan.ClientApp/fdd" `
        --configuration "$env:CONFIGURATION"

  # Build MalwareScan.ClientApp for win-x86
  - ps: >-
      dotnet publish ./src/MalwareScan.ClientApp `
        --output "$env:APPVEYOR_BUILD_FOLDER/.artifacts/MalwareScan.ClientApp/win-x86" `
        --configuration "$env:CONFIGURATION" `
        --runtime "win-x86"

  # Build MalwareScan.ClientApp for win-x64
  - ps: >-
      dotnet publish ./src/MalwareScan.ClientApp `
        --output "$env:APPVEYOR_BUILD_FOLDER/.artifacts/MalwareScan.ClientApp/win-x64" `
        --configuration "$env:CONFIGURATION" `
        --runtime "win-x64"

  # Build MalwareScan.ClientApp for linux-x64
  - ps: >-
      dotnet publish ./src/MalwareScan.ClientApp `
        --output "$env:APPVEYOR_BUILD_FOLDER/.artifacts/MalwareScan.ClientApp/linux-x64" `
        --configuration "$env:CONFIGURATION" `
        --runtime "linux-x64"

after_build:
  # Push Markdown documentation artifacts
  - ps: >-
      Get-ChildItem ./*.md | `
        % { Push-AppveyorArtifact $_.FullName -FileName $_.Name }

test_script:
  # MalwareScan.Client unit tests
  - ps: >-
      dotnet test test/MalwareScan.Client.UnitTests `
        --configuration "$env:CONFIGURATION" `
        --collect "Code Coverage"
  # MalwareScan.ClientApp unit tests
  - ps: >-
      dotnet test test/MalwareScan.ClientApp.UnitTests `
        --configuration "$env:CONFIGURATION" `
        --collect "Code Coverage"

artifacts:
# MalwareScan.Client class library
- path: .artifacts/MalwareScan.Client/fdd
  name: MalwareScan.Client-fdd
  type: Zip
# MalwareScan.Client NuGet package
- path: .artifacts/*.nupkg
  name: NuGet
  type: NuGetPackage
# MalwareScan.ClientApp console app (framework-dependent deployment)
- path: .artifacts/MalwareScan.ClientApp/fdd
  name: MalwareScan.ClientApp-fdd
  type: Zip
# MalwareScan.ClientApp console app (Windows x86)
- path: .artifacts/MalwareScan.ClientApp/win-x86
  name: MalwareScan.ClientApp-win-x86
  type: Zip
# MalwareScan.ClientApp console app (Windows x64)
- path: .artifacts/MalwareScan.ClientApp/win-x64
  name: MalwareScan.ClientApp-win-x64
  type: Zip
# MalwareScan.ClientApp console app (Linux x64)
- path: .artifacts/MalwareScan.ClientApp/linux-x64
  name: MalwareScan.ClientApp-linux-x64
  type: Zip
