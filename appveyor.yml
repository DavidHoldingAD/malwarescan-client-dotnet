version: 1.0.{build}-{branch}

image: Visual Studio 2017

branches:
  only:
  - master
  - develop

init:
  # Good practice, because Windows line endings are different from Unix/Linux ones
  - cmd: git config --global core.autocrlf true

install:
  # Install GitVersion.Portable
  - cmd: choco install GitVersion.Portable --prerelease --yes

before_build:
  # Display .NET Core version
  - cmd: dotnet --version
  # Get version from GitVersion
  - ps: gitversion /l console /output buildserver

build_script:
  # Build MalwareScan.Client class library
  - cmd: dotnet publish ./src/MalwareScan.Client --output "./.artifacts/MalwareScan.Client/fdd" --configuration "%CONFIGURATION%"
  # Build MalwareScan.Client NuGet package
  - cmd: dotnet pack ./src/MalwareScan.Client --output "./.artifacts" --configuration "%CONFIGURATION%"
  # Build MalwareScan.ClientApp console app (framework-dependent deployment)
  - cmd: dotnet publish ./src/MalwareScan.ClientApp --output "./.artifacts/MalwareScan.ClientApp/fdd" --configuration "%CONFIGURATION%"
  # Build MalwareScan.ClientApp console app (Windows x86)
  - cmd: dotnet publish ./src/MalwareScan.ClientApp --output "./.artifacts/MalwareScan.ClientApp/win-x86" --configuration "%CONFIGURATION%" --runtime "win-x86"
  # Build MalwareScan.ClientApp console app (Windows x64)
  - cmd: dotnet publish ./src/MalwareScan.ClientApp --output "./.artifacts/MalwareScan.ClientApp/win-x64" --configuration "%CONFIGURATION%" --runtime "win-x64"
  # Build MalwareScan.ClientApp console app (Linux x64)
  - cmd: dotnet publish ./src/MalwareScan.ClientApp --output "./.artifacts/MalwareScan.ClientApp/linux-x64" --configuration "%CONFIGURATION%" --runtime "linux-x64"

artifacts:
# MalwareScan.Client class library
- path: ./.artifacts/MalwareScan.Client/fdd
  name: Client-fdd
  type: Zip
# MalwareScan.Client NuGet package
- path: ./.artifacts/*.nupkg
  name: NuGet
  type: NuGetPackage
# MalwareScan.ClientApp console app (framework-dependent deployment)
- path: ./.artifacts/MalwareScan.ClientApp/fdd
  name: ClientApp-fdd
  type: Zip
# MalwareScan.ClientApp console app (Windows x86)
- path: ./.artifacts/MalwareScan.ClientApp/win-x86
  name: ClientApp-win-x86
  type: Zip
# MalwareScan.ClientApp console app (Windows x64)
- path: ./.artifacts/MalwareScan.ClientApp/win-x64
  name: ClientApp-win-x64
  type: Zip
# MalwareScan.ClientApp console app (Linux x64)
- path: ./.artifacts/MalwareScan.ClientApp/linux-x64
  name: ClientApp-linux-x64
  type: Zip

after_build:
  # Push NuGet package artifacts
  - ps: Get-ChildItem .\*.nupkg | % { Push-AppveyorArtifact $_.FullName -FileName $_.Name }
  # Push ZIP archive artifacts
  - ps: Get-ChildItem .\*.zip | % { Push-AppveyorArtifact $_.FullName -FileName $_.Name }

test_script:
  # MalwareScan.Client unit tests
  - cmd: dotnet test test/MalwareScan.Client.UnitTests/
  # MalwareScan.ClientApp unit tests
  - cmd: dotnet test test/MalwareScan.ClientApp.UnitTests/

on_finish:
  # any cleanup in here

deploy: off
