#Requires -Version 5.0

$ErrorActionPreference = "Stop"

$BasePath = $(Resolve-Path -Path $PSScriptRoot)
$DeployPath = $(Join-Path -Path $BasePath -ChildPath ".deploy")
$Configuration = "Debug"
$Runtimes = ("win-x86", "win-x64", "linux-x64")

if (Test-Path -Path $DeployPath) {
	Remove-Item -Path "$DeployPath" -Force -Recurse
}

#region Building solution

Write-Progress -Id 0 -PercentComplete 0 `
	-Activity "Building solution..."

& dotnet build

Write-Progress -Id 0 -Completed `
	-Activity "Building solution..."

#endregion

#region Processing MalwareScan.Client...

$Task = 0
$Tasks = 4

Write-Progress -Id 0 -PercentComplete ($Task++ / $Tasks) `
	-Activity "Processing MalwareScan.Client..." `
	-Status "Publishing..."
& dotnet publish .\src\MalwareScan.Client `
	--output "$DeployPath\MalwareScan.Client" `
	--configuration "$Configuration"

Write-Progress -Id 0 -PercentComplete ($Task++ / $Tasks) `
	-Activity "Processing MalwareScan.Client..." `
	-Status "Archiving..."
Compress-Archive -LiteralPath "$DeployPath\MalwareScan.Client" `
	-DestinationPath "$DeployPath\MalwareScan.Client-fdd.zip"

Write-Progress -Id 0 -PercentComplete ($Task++ / $Tasks) `
	-Activity "Processing MalwareScan.Client..." `
	-Status "Packing..."
& dotnet pack .\src\MalwareScan.Client `
	--output "$DeployPath" `
	--configuration "$Configuration"

Write-Progress -Id 0 -PercentComplete ($Task++ / $Tasks) `
	-Activity "Processing MalwareScan.Client..." `
	-Status "Unit testing..."
& dotnet test .\test\MalwareScan.Client.UnitTests `
	--configuration "$Configuration" `
	--collect "Code Coverage"

Write-Progress -Id 0 -Completed `
	-Activity "Processing MalwareScan.Client..."

#endregion

#region Processing MalwareScan.ClientApp

$Task = 0
$Tasks = 3 + $Runtimes.Count * 2

Write-Progress -Id 0 -PercentComplete ($Task++ / $Tasks) `
	-Activity "Processing MalwareScan.ClientApp..." `
	-Status "Publishing (framework-dependent deployment)..."
& dotnet publish .\src\MalwareScan.ClientApp `
	--output "$DeployPath\MalwareScan.ClientApp\fdd" `
	--configuration "$Configuration"

Write-Progress -Id 0 -PercentComplete ($Task++ / $Tasks) `
	-Activity "Processing MalwareScan.ClientApp..." `
	-Status "Archiving (framework-dependent deployment)..."
Compress-Archive -LiteralPath "$DeployPath\MalwareScan.ClientApp\fdd" `
	-DestinationPath "$DeployPath\MalwareScan.ClientApp-fdd.zip"

Write-Progress -Id 0 -PercentComplete ($Task++ / $Tasks) `
	-Activity "Processing MalwareScan.ClientApp..." `
	-Status "Unit testing..."
& dotnet test .\test\MalwareScan.ClientApp.UnitTests `
	--configuration "$Configuration" `
	--collect "Code Coverage"

foreach ($Runtime in $Runtimes) {
	Write-Progress -Id 0 -PercentComplete ($Task++ / $Tasks) `
		-Activity "Processing MalwareScan.ClientApp..." `
		-Status "Publishing for $Runtime..."
	& dotnet publish .\src\MalwareScan.ClientApp --output "$DeployPath\MalwareScan.ClientApp\$Runtime" `
		--configuration "$Configuration" `
		--runtime "$Runtime"

	Write-Progress -Id 0 -PercentComplete ($Task++ / $Tasks) `
		-Activity "Processing MalwareScan.ClientApp..." `
		-Status "Archiving for $Runtime..."
	Compress-Archive -LiteralPath "$DeployPath\MalwareScan.ClientApp\$Runtime" `
		-DestinationPath "$DeployPath\MalwareScan.ClientApp-$Runtime.zip"
}

Write-Progress -Id 0 -Completed `
	-Activity "Processing MalwareScan.Client..."

#endregion
